{"version":3,"sources":["redux/user/user.types.js","api/user.js","redux/user/user.actions.js","pages/Login.js","redux/case/case.types.js","api/cases.js","redux/case/case.actions.js","components/case-analysis/list-view/detail/CaseDetailViewer.js","components/case-analysis/list-view/CaseListViewer.js","components/case-analysis/CaseAnalysisContainer.js","components/shared/ImageUploader.js","components/case-analysis/wizard/CaseAnalysisWizard.js","components/case-analysis/admin/admin-detail-view/AdminCaseDetailViewer.js","components/case-analysis/admin/admin-case-list/AdminCaseListViewer.js","components/case-analysis/admin/CaseAnalysisAdminConsole.js","pages/Dashboard.js","router.js","App.js","redux/user/user.reducer.js","redux/case/case-list-view-reducer.js","redux/case/case-wizard-reducer.js","redux/case/case-admin-reducer.js","redux/case/case.reducer.js","redux/rootReducer.js","redux/store.js","reportWebVitals.js","index.js"],"names":["AUTHENTICATE","LOGOUT","INIT_LOGIN_CHECK","INVALID_LOGIN","SERVER_URL","createUserAccount","data","dispatch","headers","Headers","append","fetch","method","body","JSON","stringify","USER_API","then","response","json","catch","authenticateUser","type","payload","invalidLoginCredentials","BG_IMAGE","INIT_STATE","username","password","signup_username","signup_name","signup_password","signup_password2","viewType","Login","props","validateUser","state","signupUser","name","setState","handleInputChange","bind","event","target","this","value","userInfo","to","document","classList","add","remove","loginBody","className","onChange","placeholder","inValidUserMessage","onClick","disabled","trim","length","renderRedirect","toggleSignInScreen","React","Component","connect","user","newUser","SET_ALL_CASES","NEW_CASE_CREATED","CASE_EDIT_INITIATED","CASE_EDIT_DISCARDED","CLEAR_CASE_UPDATE_NOTIFICATION","SET_ALL_PENDING_CASES","getAllCases","uid","CASE_API","setAllCases","getAllCasesByFilter","status","statusId","createNewCase","userId","newCaseCreated","editCase","caseId","caseid","getAllCasesForAdmin","getAllPendingCases","setAllPendingCases","changePendingCaseStatus","changeAllPendingCaseStatus","CaseDetailViewer","toggleDetailView","flag","isDetailViewOpen","EditSelectedCase","e","caseInfo","stopPropagation","_id","editSelectedCase","caseEditInitiated","scope","role","casename","images","map","img","index","src","url","alt","description","imageNotes","CaseListViewer","filterCasesByStatus","tbody","caseList","id","defaultValue","CaseAnalysisContainer","fetchAllCases","caseAnalysisConsole","caseListView","ImageUploader","uploadedImages","image","tagInputVal","onImageTagInputChange","aria-label","aria-describedby","addTagtoImage","tags","tag","tagIndex","accept","onImagesUpload","multiple","htmlFor","initialState","CaseAnalysisWizard","onFormInputChange","files","Array","from","formData","FormData","forEach","file","i","res","imgs","slice","tagStr","imgObj","push","onNewCaseFormSubmit","validateUserInput","caseEditId","caseEditDiscarded","resetCaseForm","clearCaseUpdateNotification","onCancelFormEdit","initEditCaseMode","getCaseAnalysis","isCaseFormValid","caseWizard","caseEditInProgressId","AdminCaseDetailViewer","changeCaseStatus","AdminCaseListViewer","changeAllCaseStatus","table","CaseAnalysisAdminConsole","casePendingList","admin","Dashboard","logoutUser","exact","path","component","AppRouter","App","isUserLoggedIn","isUserAuthIn","INITIAL_STATE","reducer","action","obj","localStorage","getItem","parse","setItem","removeItem","caseCreatedNotification","caseReducer","combineReducers","caseWizardReducer","caseListViewReducer","caseAdminReducer","rootReducer","userReducer","enhancers","applyMiddleware","thunk","composeWithDevTools","store","createStore","compose","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b3b6099b.chunk.js","sourcesContent":["export const AUTHENTICATE = 'AUTHENTICATE';\nexport const LOGOUT = 'LOGOUT';\nexport const INIT_LOGIN_CHECK = 'INIT_LOGIN_CHECK';\nexport const CREATE_USER = 'CREATE_USER';\nexport const INVALID_LOGIN = 'INVALID_LOGIN';\n\n","const SERVER_URL = 'https://caseanalysisserver.karanthakor.repl.co';\n\n// User APIs\nexport const authenticateUser = (data) => {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json;charset=UTF-8');\n    return fetch(`${SERVER_URL}/users/auth`,\n        {\n            method: 'POST',\n            headers,\n            body: JSON.stringify(data)\n        });\n    }\n\nexport const createNewUser = (data) => {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json;charset=UTF-8');\n    return fetch(`${SERVER_URL}/users`,\n        {\n            method: 'POST',\n            headers,\n            body: JSON.stringify(data)\n        });\n}","import { AUTHENTICATE, LOGOUT, INIT_LOGIN_CHECK, INVALID_LOGIN } from './user.types';\nimport * as USER_API from '../../api/user';\n\n\nexport const userAuthenticated = (payload) => {\n    return {\n        type: AUTHENTICATE,\n        payload\n    };\n};\n\n// export const userCreated = (payload) => {};\n\nexport const createUserAccount = (data) => {\n    return function (dispatch) {\n        // api req\n        return USER_API.createNewUser(data)\n            .then((response) => response.json())\n            .then((data) => {\n                // dispatch(userCreated());\n            })\n            .catch(() => {\n                // error handling\n            });\n    };\n};\n\nexport const authenticateUser = (data) => {\n    return function (dispatch) {\n        // api req\n        return USER_API.authenticateUser(data)\n            .then((response) => response.json())\n            .then((data) => {\n                dispatch(userAuthenticated(data));\n                dispatch(invalidLoginCredentials(''));\n            })\n            .catch(() => {\n                dispatch(invalidLoginCredentials('Please enter valid login credentials.'));\n            });\n    };\n};\n\nexport const invalidLoginCredentials = (payload) => {\n    return {\n        type: INVALID_LOGIN,\n        payload\n    };\n}\n\nexport const isUserLoggedIn = () => {\n    return {\n        type: INIT_LOGIN_CHECK\n    };\n};\n\nexport const logoutUser = () => {\n    return {\n        type: LOGOUT\n    };\n};\n","import React from \"react\";\nimport './Login.css';\nimport { connect } from \"react-redux\";\nimport { Redirect } from 'react-router-dom'\nimport { authenticateUser, createUserAccount } from '../redux/user/user.actions';\nconst BG_IMAGE = 'home-bg-image';\n\nconst INIT_STATE = {\n    username: '',\n    password: '',\n    signup_username: '',\n    signup_name: '',\n    signup_password: '',\n    signup_password2: '',\n    viewType: 'login'\n};\n\nclass Login extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = INIT_STATE;\n\n        this.handleInputChange = this.handleInputChange.bind(this);\n    }\n\n    handleInputChange(event) {\n        const target = event.target;\n        const name = target.name;\n        this.setState({\n          [name]: target.value\n        });\n    }\n\n    // toggle btwn login/signup\n    toggleSignInScreen() {\n        if (this.state.viewType !== 'login') {\n            this.setState({\n                viewType: 'login'\n            });\n        } else {\n            this.setState({\n                viewType: 'signup'\n            });\n        }\n        \n    }\n\n    validateUser = () =>  {\n        this.props.authenticateUser({ username: this.state.username, password: this.state.password});\n    }\n\n    signupUser = () => {\n        this.props.createUserAccount({ username: this.state.signup_username, name: this.state.signup_name, password: this.state.signup_password2});\n        // reverting state\n        this.setState(INIT_STATE);\n    }\n\n    renderRedirect() {\n        if (this.props.userInfo) {\n            return <Redirect to='/' />\n        }\n    }\n\n    componentDidMount() {\n        // set BG image for login screen\n        document.body.classList.add(BG_IMAGE);\n    }\n    componentWillUnmount() {\n        document.body.classList.remove(BG_IMAGE);\n    }\n\n    render() {\n      let loginBody;\n      if (this.state.viewType === 'login') {\n        loginBody = <div>\n        <div className=\"form-group\">\n            <label>Username</label>\n            <input type=\"text\" name=\"username\" className=\"form-control\" value={this.state.username} onChange={this.handleInputChange} placeholder=\"Enter Username\" />\n        </div>\n        <div className=\"form-group\">\n            <label>Password</label>\n            <input type=\"password\" name=\"password\" className=\"form-control\" value={this.state.password} onChange={this.handleInputChange} placeholder=\"Enter Password\" />\n        </div>\n        <div className=\"form-group\">\n            <p className=\"text-center\">By signing up you accept our Terms Of Use</p>\n            {this.props.inValidUserMessage && <p className=\"error-message\">{this.props.inValidUserMessage}</p>}\n        </div>\n        <div className=\"col-md-12 text-center \">\n            <button type=\"submit\" onClick={() => this.validateUser()} disabled={this.state.username.trim().length < 3 || this.state.password.trim().length < 5} className=\" btn btn-block mybtn btn-primary tx-tfm\">Login</button>\n        </div>\n      </div>\n      } else {\n        loginBody = <div>\n        <div className=\"form-group\">\n            <label>Username</label>\n            <input type=\"text\" name=\"signup_username\" className=\"form-control\" value={this.state.signup_username} onChange={this.handleInputChange} placeholder=\"Enter Username\" />\n        </div>\n        <div className=\"form-group\">\n            <label>Name</label>\n            <input type=\"text\" name=\"signup_name\" className=\"form-control\" value={this.state.signup_name} onChange={this.handleInputChange} placeholder=\"Enter Name\" />\n        </div>\n        <div className=\"form-group\">\n            <label>Enter Password</label>\n            <input type=\"password\" name=\"signup_password\" className=\"form-control\" value={this.state.signup_password} onChange={this.handleInputChange} placeholder=\"Enter Password\" />\n        </div>\n        <div className=\"form-group\">\n            <label>Re-enter Password</label>\n            <input type=\"password\" name=\"signup_password2\" className=\"form-control\" value={this.state.signup_password2} onChange={this.handleInputChange} placeholder=\"Enter Password\" />\n        </div>\n        <div className=\"form-group\">\n            <p className=\"text-center\">By signing up you accept our Terms Of Use</p>\n        </div>\n        <div className=\"col-md-12 text-center \">\n            <button type=\"submit\"\n                onClick={() => this.signupUser()}\n                disabled={this.state.signup_username.trim().length < 3 || this.state.signup_name.trim().length < 3 || this.state.signup_password.trim().length < 5 || this.state.signup_password2.trim().length < 5 || (this.state.signup_password !== this.state.signup_password2) } \n                className=\" btn btn-block mybtn btn-primary tx-tfm\">Sign Up</button>\n        </div>\n      </div>\n      }\n      \n      return (\n        <div className=\"container\">\n            {this.renderRedirect()}\n            <div className=\"row\">\n\t\t\t    <div className=\"col-md-5 mx-auto\">\n                    <div className=\"myform form \">\n                        <div className=\"logo mb-3\">\n                            <div className=\"col-md-12 text-center\">\n                                <h2 className=\"darkslategrey\">Welcome to vPethology Analytics Platform</h2>\n                            </div>\n                        </div>\n                        {loginBody}\n                          <div className=\"col-md-12 \">\n                              <div className=\"login-or\">\n                                  <span className=\"span-or\">or</span>\n                              </div>\n                          </div>\n                          <div className=\"form-group\">\n                                <p className=\"text-center\">\n                                    Don't have account?\n                                    {this.state.viewType === 'login' ? <span className=\"sign-in-link\" onClick={() => this.toggleSignInScreen()}>Sign up here</span> : <span className=\"sign-in-link\" onClick={() => this.toggleSignInScreen()}>Go back to login</span> }\n                                </p>\n                          </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n      );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n      userInfo: state.user.userInfo,\n      inValidUserMessage: state.user.inValidUserMessage\n    }\n}\n  \nconst mapDispatchToProps = dispatch => {\n    return {\n      authenticateUser: (user) => dispatch(authenticateUser(user)),\n      createUserAccount: (newUser) => dispatch(createUserAccount(newUser)),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n","// user actions\nexport const SET_ALL_CASES = 'SET_ALL_CASES';\nexport const NEW_CASE_CREATED = 'NEW_CASE_CREATED';\nexport const CASE_EDIT_INITIATED = 'CASE_EDIT_INITIATED';\nexport const CASE_EDIT_DISCARDED = 'CASE_EDIT_DISCARDED';\n\n// notification\nexport const CLEAR_CASE_UPDATE_NOTIFICATION = 'CLEAR_CASE_UPDATE_NOTIFICATION';\n\n// admin actions\nexport const SET_ALL_PENDING_CASES = 'SET_ALL_PENDING_CASES';\n","const SERVER_URL = 'https://caseanalysisserver.karanthakor.repl.co';\n\n// User Api\nexport const getAllCaseAnalysis = (uid) => {\n    return fetch(`${SERVER_URL}/patient-analysis/all/${uid}`);\n}\n\nexport const getAllCaseAnalysisByFilter = (uid, status) => {\n    return fetch(`${SERVER_URL}/patient-analysis/filter/${uid}?statusId=${status.statusId}`);\n}\nexport const getCaseAnalysis = (uid, caseid) => {\n    return fetch(`${SERVER_URL}/patient-analysis/${uid}/${caseid}`);\n}\n\nexport const creatNewCaseAnalysis = (uid, data) => {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json;charset=UTF-8');\n    return fetch(`${SERVER_URL}/patient-analysis/${uid}/submit`,\n        {\n            method: 'POST',\n            headers,\n            body: JSON.stringify(data)\n        });\n}\n\nexport const editCaseAnalysis = (uid, caseid, data) => {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json;charset=UTF-8');\n    return fetch(`${SERVER_URL}/patient-analysis/${uid}/${caseid}`,\n        {\n            method: 'PUT',\n            headers,\n            body: JSON.stringify(data)\n        });\n}\n\n// Admin APIs\nexport const getAllCasesForAdmin = (uid) => {\n    return fetch(`${SERVER_URL}/patient-analysis/admin/all/${uid}`);\n}\n\nexport const getAllPendingCaseAnalysis = (uid) => {\n    return fetch(`${SERVER_URL}/admin/patient-analysis/${uid}`);\n}\n\nexport const changeCaseStatus = (uid, caseid, status) => {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json;charset=UTF-8');\n    return fetch(`${SERVER_URL}/admin/patient-analysis/${uid}/${caseid}/status`,\n        {\n            method: 'PUT',\n            headers,\n            body: JSON.stringify(status)\n        });\n}\n\n// force update for pending cases\nexport const changeAllCaseStatus = (uid, status) => {debugger;\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json;charset=UTF-8');\n    return fetch(`${SERVER_URL}/admin/all/patient-analysis/${uid}/status`,\n        {\n            method: 'PUT',\n            headers,\n            body: JSON.stringify(status)\n        });\n}","import {\n    SET_ALL_CASES,\n    NEW_CASE_CREATED,\n    CASE_EDIT_INITIATED,\n    CASE_EDIT_DISCARDED,\n    SET_ALL_PENDING_CASES,\n    CLEAR_CASE_UPDATE_NOTIFICATION\n} from './case.types';\nimport * as CASE_API from '../../api/cases';\n\n\nexport const getAllCases = (uid) => {\n    return function (dispatch) {\n\n        // api req\n        return CASE_API.getAllCaseAnalysis(uid)\n            .then((response) => response.json())\n            .then((data) => {\n                dispatch(setAllCases(data));\n            })\n            .catch(() => {\n                // error handling\n            });\n    };\n};\n\nexport const getAllCasesByFilter = (uid, status) => {\n    return function (dispatch) {\n        // api req\n        return CASE_API.getAllCaseAnalysisByFilter(uid, status)\n            .then((response) => response.json())\n            .then((data) => {\n                dispatch(setAllCases(data));\n            })\n            .catch(() => {\n                // error handling\n            });\n    };\n};\n\nexport const setAllCases = (payload) => {\n    return {\n        type: SET_ALL_CASES,\n        payload\n    };\n}\n\nexport const createNewCase = (payload) => {\n    const { userId, data } = payload;\n    return function (dispatch) {\n        return CASE_API.creatNewCaseAnalysis(userId, data)\n            .then((response) => response.json())\n            .then((data) => {\n                dispatch(newCaseCreated('New case created successfully...'));\n            })\n            .catch(() => {\n                // error handling\n            });\n    };\n}\n\nexport const editCase = (payload) => {\n    const { userId, caseId, data } = payload;\n    return function (dispatch) {\n        return CASE_API.editCaseAnalysis(userId, caseId, data)\n            .then((response) => response.json())\n            .then((data) => {\n                dispatch(newCaseCreated('Case edited successfully...'));\n            })\n            .catch(() => {\n                // error handling\n            });\n    };\n}\n\nexport const newCaseCreated = (payload) => {\n    return {\n        type: NEW_CASE_CREATED,\n        payload\n    };\n}\n\nexport const clearCaseUpdateNotification = () => {\n    return {\n        type: CLEAR_CASE_UPDATE_NOTIFICATION\n    };\n}\n\n\nexport const editSelectedCase = (payload) => {\n    return {\n        type: CASE_EDIT_INITIATED,\n        payload\n    };\n}\n\nexport const caseEditDiscarded = () => {\n    return {\n        type: CASE_EDIT_DISCARDED\n    };\n}\n\n// Admin APIs\nexport const getAllCasesForAdmin = (uid) => {\n    return function (dispatch) {\n\n        // api req\n        return CASE_API.getAllCasesForAdmin(uid)\n            .then((response) => response.json())\n            .then((data) => {\n                dispatch(setAllCases(data));\n            })\n            .catch(() => {\n                // error handling\n            });\n    };\n};\n\n\nexport const getAllPendingCases = (uid) => {\n    return function (dispatch) {\n        // api req\n        return CASE_API.getAllPendingCaseAnalysis(uid)\n            .then((response) => response.json())\n            .then((data) => {\n                dispatch(setAllPendingCases(data));\n            })\n            .catch(() => {\n                // error handling\n            });\n    };\n};\n\nexport const setAllPendingCases = (payload) => {\n    return {\n        type: SET_ALL_PENDING_CASES,\n        payload\n    };\n}\n\nexport const changePendingCaseStatus = (uid, caseId, status) => {\n    return function (dispatch) {\n        // api req\n        return CASE_API.changeCaseStatus(uid, caseId, status)\n            .then((response) => response.json())\n            .then((data) => {\n                dispatch(getAllPendingCases(uid));\n            })\n            .catch(() => {\n                // error handling\n            });\n    };\n};\n\nexport const changeAllPendingCaseStatus = (uid, status) => {\n    return function (dispatch) {\n        // api req\n        return CASE_API.changeAllCaseStatus(uid, status)\n            .then((response) => response.json())\n            .then((data) => {debugger;\n                dispatch(getAllPendingCases(uid));\n            })\n            .catch(() => {\n                // error handling\n            });\n    };\n};\n","import React from \"react\";\nimport './CaseDetailViewer.css';\nimport { connect } from \"react-redux\";\nimport {\n  Redirect\n} from \"react-router-dom\";\nimport { editSelectedCase } from '../../../../redux/case/case.actions';\n\nclass CaseDetailViewer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isDetailViewOpen: false,\n      caseEditInitiated: false,\n    };\n  }\n\n  toggleDetailView = () => {\n    const flag = !this.state.isDetailViewOpen;\n    this.setState({ \n      isDetailViewOpen: flag\n    })\n  }\n\n  EditSelectedCase = (e) => {\n    if (this.props.caseInfo.statusId > -1) return;\n    e.stopPropagation();\n    if (this.props.caseInfo && this.props.caseInfo._id && this.props.caseInfo.statusId === -1) {\n      this.props.editSelectedCase(this.props.caseInfo._id);\n      this.setState({\n        caseEditInitiated: true\n      });\n    }\n  }\n\n  render() {\n    // redirect to case edition wizard page\n    if (this.state.caseEditInitiated) {\n      return <Redirect to=\"/case-wizard\" />\n    }\n    return (\n      <tr key={this.props.index} onClick={() => this.toggleDetailView()} className=\"case-detail-raw\">\n        <th scope=\"row\">\n          <i className={\"fa fa-edit \"+ (this.props.caseInfo.statusId > -1 ? \"gray\": \"\")} role=\"button\" onClick={(e) => this.EditSelectedCase(e)}></i>\n          <span className=\"case-view-icon\">\n            {this.state.isDetailViewOpen ? <i className=\"fa fa-caret-down\"></i> : <i className=\"fa fa-caret-right\"></i>}\n          </span>\n        </th>\n        <td>\n          {this.props.caseInfo.casename}\n\n          {this.state.isDetailViewOpen &&\n            <div className=\"card-group case-detail-images\">\n              {this.props.caseInfo.images.map((img,index) => (\n                <div className=\"card\" key={index}>\n                  <div className=\"card-body\">\n                    <img className=\"card-img-top\" src={img.url} alt=\"\" />\n                  </div>\n                </div>\n              ))}\n            </div>\n          }\n        </td>\n        <td>\n          {this.props.caseInfo.description}\n          <div>images</div>\n        </td>\n        <td>{this.props.caseInfo.status}</td>\n        <td>{this.props.caseInfo.imageNotes}</td>\n      </tr>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {}\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    editSelectedCase: (caseId) => dispatch(editSelectedCase(caseId))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CaseDetailViewer);\n","import React from \"react\";\nimport './CaseListViewer.css';\nimport { connect } from \"react-redux\";\nimport CaseDetailViewer from './detail/CaseDetailViewer';\nimport { getAllCases, getAllCasesByFilter } from '../../../redux/case/case.actions';\n\n \nclass CaseListViewer extends React.Component {\n    \n    filterCasesByStatus = (e) => {\n        if (this.props.userInfo && this.props.userInfo._id) {\n            if (e.target.value === 'All') {\n                this.props.getAllCases(this.props.userInfo._id);\n            } else {\n                this.props.getAllCasesByFilter(this.props.userInfo._id, {statusId: e.target.value});\n            }\n        }\n    }\n\n    render() {\n        let tbody;\n        if (this.props?.caseList.length > 0) {\n            tbody = <tbody>\n                {\n                    this.props.caseList.map((caseInfo, index) => (\n                        <CaseDetailViewer key={index} caseInfo={caseInfo}/>\n                    ))\n                }\n            </tbody>\n        } else {\n            // no case records to display\n            tbody = <tbody><tr><td></td><td>No case records to display.</td></tr></tbody>\n        }\n        return (\n            <div className=\"case-list-div\">\n                <table className=\"table case-table table-hover\">\n                    <thead>\n                        <tr>\n                            <th scope=\"col\"></th>\n                            <th scope=\"col\" className=\"w-25\">\n                                Case Name\n                            </th>\n                            <th scope=\"col\">Description</th>\n                            <th scope=\"col\">\n                                Case Status\n                                <div className=\"filterDiv\">\n                                <select className=\"custom-select\" onChange={(e)=> this.filterCasesByStatus(e)} id=\"inlineFormCustomSelect\">\n                                    <option value=\"All\" defaultValue>All</option>\n                                    <option value=\"1\">Approved</option>\n                                    <option value=\"-1\">Rejected</option>\n                                    <option value=\"0\">Pending</option>\n                                </select>\n                            </div>\n                            </th>\n                            <th scope=\"col\">Image Information</th>\n                        </tr>\n                    </thead>\n                    {tbody}\n                </table>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        userInfo: state.user.userInfo\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getAllCases: (uid) => dispatch(getAllCases(uid)),\n        getAllCasesByFilter: (uid, status) => dispatch(getAllCasesByFilter(uid, status))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CaseListViewer);\n","import React from \"react\";\nimport './CaseAnalysisContainer.css';\nimport { connect } from \"react-redux\";\n\nimport {\n  Link\n} from \"react-router-dom\";\nimport { getAllCases, getAllCasesForAdmin } from '../../redux/case/case.actions';\nimport CaseListViewer from './list-view/CaseListViewer';\n\nclass CaseAnalysisContainer extends React.Component {\n  fetchAllCases = () => {\n    if (this.props.userInfo && this.props.userInfo._id) {\n      if (this.props.userInfo.role === 'admin') {\n        this.props.getAllCasesForAdmin(this.props.userInfo._id);\n      } else {\n        this.props.getAllCases(this.props.userInfo._id);\n      }\n    }\n  }\n\n  componentDidMount() {\n    // get all case analysis\n    this.fetchAllCases();\n  }\n\n  render() {\n    return (\n      <div className=\"case-analysis-div\">\n        <h3 className=\"darkslategrey\">Welcome to case management console</h3>\n        <Link to=\"/case-wizard\">\n          <button type=\"button\" className=\"btn btn-outline-primary btn-md\">Create a new case</button>\n        </Link>\n        <CaseListViewer caseList={this.props.caseList}/>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    userInfo: state.user.userInfo,\n    caseList: state.caseAnalysisConsole.caseListView.caseList,\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getAllCases: (uid) => dispatch(getAllCases(uid)),\n    getAllCasesForAdmin: (uid) => dispatch(getAllCasesForAdmin(uid))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CaseAnalysisContainer);\n","import React from \"react\";\nimport './ImageUploader.css';\n\nclass ImageUploader extends React.Component {\n\n  render() {\n    const uploadedImages = this.props.images.map((image, index) => (    \n        <div className=\"col-sm-4\" key={index}>\n          <div className=\"card\">\n            <div className=\"card-body image-card\">\n              <img className=\"card-img-top\" src={image.url} alt=\"\" />\n              <div className=\"input-group input-group-sm mb-1\">\n                <input type=\"text\" className=\"form-control\" value={image.tagInputVal} onChange={(e) => this.props.onImageTagInputChange(e, index)} placeholder=\"Image Tags\" aria-label=\"Image Tag\" aria-describedby=\"basic-addon2\" />\n                <div className=\"input-group-append\">\n                  <button className=\"btn btn-outline-secondary fa fa-plus\" disabled={image.tagInputVal.trim().length === 0} onClick={() => this.props.addTagtoImage(index, image.tagInputVal)} type=\"button\"></button>\n                </div>\n              </div>\n              <div className=\"img-labels-section\">\n                { image.tags.map((tag, tagIndex) => (\n                    <span className=\"image-label\" key={tagIndex}>\n                      {tag} <i className=\"fa fa-times-circle\"></i>\n                  </span>\n                )) }\n               \n              </div>\n              <div className=\"remove-image-btn\">\n                <button className=\"btn btn-sm btn-outline-danger\" type=\"button\">Remove</button>\n              </div>\n            </div>\n          </div>\n        </div>\n    ))\n\n    return (\n      <div>\n        <div className=\"custom-file col-md-4 image-upload-btn\">\n          <input type=\"file\" className=\"custom-file-input\" accept=\"image/png, image/jpeg\" onChange={(e) => this.props.onImagesUpload(e)} multiple/>\n          <label className=\"custom-file-label\" htmlFor=\"inputGroupFile01\">Upload Images</label>\n        </div>\n        <div className=\"row uploaded-imgs\">\n          {\n            uploadedImages\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ImageUploader;\n","import React from \"react\";\nimport './CaseAnalysisWizard.css';\nimport { connect } from \"react-redux\";\n\nimport ImageUploader from '../../shared/ImageUploader';\nimport { createNewCase, editCase, clearCaseUpdateNotification, caseEditDiscarded } from '../../../redux/case/case.actions';\nimport { getCaseAnalysis } from '../../../api/cases';\n\nconst API_URL = 'https://caseanalysisserver.karanthakor.repl.co';\n\nconst initialState =  {\n  caseId: '',\n  casename: '',\n  description: '',\n  images: [],\n  imageNotes: ''\n};\n\nclass CaseAnalysisWizard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = initialState;\n  }\n\n  componentDidMount() {\n    if (this.props.userInfo && this.props.userInfo._id && this.props.caseEditId) {\n      this.initEditCaseMode(this.props.userInfo._id, this.props.caseEditId);\n      \n    }\n  }\n\n  initEditCaseMode(uid, caseId) {\n    // init edit case mode\n    getCaseAnalysis(uid, caseId)\n        .then(res => res.json())\n        .then(data => {\n          const { casename, description, imageNotes, images, _id } = data;\n          this.setState({\n            caseId: _id,\n            casename: casename,\n            description: description,\n            images: images,\n            imageNotes: imageNotes\n          })\n        });\n  }\n\n  componentWillUnmount() {\n    // discard edit case mode\n    if (this.props.caseEditId) {\n      this.props.caseEditDiscarded();\n      this.props.clearCaseUpdateNotification();\n    }\n  }\n\n  onFormInputChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  // images upload related handlers\n  onImagesUpload = e => {\n    const files = Array.from(e.target.files)\n    const formData = new FormData()\n    files.forEach((file, i) => {\n      formData.append(i, file)\n    })\n\n    fetch(`${API_URL}/image-upload`, {\n      method: 'POST',\n      body: formData\n    })\n    .then(res => res.json())\n    .then(images => {\n      images.map((img) => img.tagInputVal = '');\n      let imgs = this.state.images;\n      imgs = [...imgs, ...images];\n      this.setState({ \n        images: imgs\n      })\n    })\n  }\n\n  // onImageRemove = index => {\n    \n  // }\n\n  onImageTagInputChange = (e, index) => {\n    let imgs = [...this.state.images];\n    // updating input tag value of selected image card\n    this.setState({ \n      images: [\n        ...imgs.slice(0, index),\n        {\n          ...imgs[index],\n          tagInputVal: e.target.value,\n        },\n        ...imgs.slice(index + 1)\n      ]\n    });\n  }\n\n  addTagtoImage = (index, tagStr) => {\n    let imgs = [...this.state.images];\n    let imgObj = {...imgs[index]};\n    imgObj.tags.push(tagStr);\n    imgObj.tagInputVal = '';\n    this.setState({ \n      images: [\n        ...imgs.slice(0, index),\n        imgObj,\n        ...imgs.slice(index + 1)\n      ]\n    });\n  }\n  \n  onNewCaseFormSubmit = () => {\n    if (this.validateUserInput()) {\n      if (this.props.caseEditId) {\n        // edit case mode\n        this.props.editCase({ userId: this.props.userInfo._id, caseId: this.state.caseId, data: this.state });\n        this.props.caseEditDiscarded();\n      } else {\n        // create case mode\n        this.props.createNewCase({ userId: this.props.userInfo._id, data: this.state });\n      }\n    }\n    // reset form\n    this.resetCaseForm();\n  }\n\n  resetCaseForm = () => {\n    this.setState(initialState);\n    this.props.clearCaseUpdateNotification();\n  }\n\n  onCancelFormEdit = () => {\n    if (this.props.caseEditId) {\n      this.props.caseEditDiscarded();\n    }\n    this.resetCaseForm();\n  }\n\n  validateUserInput = () => {\n    if (this.state.casename.trim().length > 2 && this.state.description.trim().length > 2 && this.state.images.length > 0) return true;\n    return false;\n  }\n\n  render() {\n    const isCaseFormValid = this.validateUserInput();\n\n    return (\n      <div className=\"case-wizard-div\">\n        <h3 className=\"darkslategrey\">Welcome to case creation wizard</h3>\n        {this.props.caseEditId && <h5 className=\"darkgoldenrod\">Case Edit Mode:</h5>}\n        <p>Please fill out all the information required to submit a case.</p>\n        <div className=\"border\">\n          <div className=\"case-wizard-elements\">\n            <div className=\"input-group mb-2 col-md-6\">\n              <input type=\"text\" className=\"form-control\" name='casename' value={this.state.casename} onChange={(e) => this.onFormInputChange(e)} placeholder=\"Case Name\" aria-label=\"casename\" aria-describedby=\"basic-addon1\" />\n            </div>\n            <div className=\"input-group mb-2 col-md-6\">\n              <textarea type=\"text\" className=\"form-control\" name='description' value={this.state.description} onChange={(e) => this.onFormInputChange(e)} placeholder=\"Case Description\" aria-label=\"description\" aria-describedby=\"basic-addon1\" />\n            </div>\n            <div className=\"col-md-12 mb-1\">\n              <ImageUploader \n                images={this.state.images}\n                onImagesUpload={this.onImagesUpload}\n                onImageTagInputChange={this.onImageTagInputChange}\n                addTagtoImage={this.addTagtoImage} \n              />\n            </div>\n            <div className=\"input-group mb-2 col-md-6\">\n              <input type=\"text\" className=\"form-control\" name='imageNotes' value={this.state.imageNotes} onChange={(e) => this.onFormInputChange(e)} placeholder=\"General notes about images\" aria-label=\"imagenotes\" aria-describedby=\"basic-addon1\" />\n            </div>\n            { this.props.status && <p className=\"darkgreen\">{ this.props.status }</p> }\n          </div>\n          <div className=\"wizard-controls-group\">\n            <button type=\"button\" disabled={!isCaseFormValid} onClick={() => this.onNewCaseFormSubmit()} className=\"btn btn-primary\">Submit</button>\n            <button type=\"button\" onClick={() => this.onCancelFormEdit()} className=\"btn btn-outline-primary\">Cancel</button>\n            <button type=\"button\" onClick={() => this.resetCaseForm()} className={\"btn btn-outline-danger \"+(this.props.caseEditId ? 'hidden': '')}>Reset</button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    userInfo: state.user.userInfo,\n    status: state.caseAnalysisConsole.caseWizard.status,\n    caseEditId: state.caseAnalysisConsole.caseWizard.caseEditInProgressId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    createNewCase: (data) => dispatch(createNewCase(data)),\n    clearCaseUpdateNotification: () => dispatch(clearCaseUpdateNotification()),\n    editCase: (data) => dispatch(editCase(data)),\n    caseEditDiscarded: () => dispatch(caseEditDiscarded())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CaseAnalysisWizard);\n","import React from \"react\";\nimport './AdminCaseDetailViewer.css';\nimport { connect } from \"react-redux\";\nimport { changePendingCaseStatus } from '../../../../redux/case/case.actions';\n\nclass AdminCaseDetailViewer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isDetailViewOpen: false\n    };\n  }\n\n  toggleDetailView = () => {\n    const flag = !this.state.isDetailViewOpen;\n    this.setState({ \n      isDetailViewOpen: flag\n    })\n  }\n  \n  changeCaseStatus = (e, status) => {\n      e.stopPropagation(); \n      if (this.props.userInfo && this.props.userInfo.role === 'admin') {\n        this.props.changePendingCaseStatus(this.props.userInfo._id, this.props.caseInfo._id, { statusId: status });\n      }\n  }\n\n  render() {\n    return (\n      <tr key={this.props.index} onClick={() => this.toggleDetailView()} className=\"case-detail-raw\">\n        <th scope=\"row\">\n            {this.state.isDetailViewOpen ? <i className=\"fa fa-caret-down\"></i> : <i className=\"fa fa-caret-right\"></i>}\n                <span className=\"case-view-icon\">\n                    <div className=\"btn-group btn-group-sm\" role=\"group\" aria-label=\"...\">\n                        <button type=\"button\" onClick={(e) => this.changeCaseStatus(e, 1)} className=\"btn btn-outline-primary\">Approve</button>\n                        <button type=\"button\" onClick={(e) => this.changeCaseStatus(e, -1)} className=\"btn btn-outline-danger\">Reject</button>\n                    </div>\n                </span>\n        </th>\n        <td>\n          {this.props.caseInfo.casename}\n\n          {this.state.isDetailViewOpen &&\n            <div className=\"card-group case-detail-images\">\n              {this.props.caseInfo.images.map((img,index) => (\n                <div className=\"card\" key={index}>\n                  <div className=\"card-body\">\n                    <img className=\"card-img-top\" src={img.url} alt=\"\" />\n                  </div>\n                </div>\n              ))}\n            </div>\n          }\n        </td>\n        <td>\n          {this.props.caseInfo.description}\n          <div>images</div>\n        </td>\n        <td>{this.props.caseInfo.imageNotes}</td>\n      </tr>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    userInfo: state.user.userInfo,\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    changePendingCaseStatus: (uid, caseId, status) => dispatch(changePendingCaseStatus(uid, caseId, status))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AdminCaseDetailViewer);\n","import React from \"react\";\nimport './AdminCaseListViewer.css';\nimport { connect } from \"react-redux\";\nimport AdminCaseDetailViewer from '../admin-detail-view/AdminCaseDetailViewer';\nimport { changeAllPendingCaseStatus } from '../../../../redux/case/case.actions';\n\nclass AdminCaseListViewer extends React.Component {\n\n    changeAllCaseStatus = (status) => {\n        if (this.props.userInfo && this.props.userInfo.role === 'admin') {\n          this.props.changeAllPendingCaseStatus(this.props.userInfo._id, { statusId: status });\n        }\n    }\n\n    render() {\n        let table;\n        if (this.props?.caseList.length > 0) {\n            table = <table className=\"table case-table table-hover\">\n                <thead>\n                    <tr>\n                        <th scope=\"col\">\n                            <div className=\"btn-group btn-group-sm\" role=\"group\" aria-label=\"...\">\n                                <button type=\"button\" onClick={() => this.changeAllCaseStatus(1)} className=\"btn btn-outline-primary\">Approve All</button>\n                                <button type=\"button\" onClick={() => this.changeAllCaseStatus(-1)} className=\"btn btn-outline-danger\">Reject All</button>\n                            </div>\n                        </th>\n                        <th scope=\"col\" className=\"w-25\">Case Name</th>\n                        <th scope=\"col\">Description</th>\n                        <th scope=\"col\">Image Information</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {\n                        this.props.caseList.map((caseInfo, index) => (\n                            <AdminCaseDetailViewer key={index} caseInfo={caseInfo} />\n                        ))\n                    }\n                </tbody>\n            </table>\n        } else {\n            table = <p>No case records to display.</p>\n        }\n        return (\n            <div className=\"case-list-div\">\n                {table}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        userInfo: state.user.userInfo,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        changeAllPendingCaseStatus: (uid, status) => dispatch(changeAllPendingCaseStatus(uid, status))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AdminCaseListViewer);\n","import React from \"react\";\nimport './CaseAnalysisAdminConsole.css';\nimport { connect } from \"react-redux\";\nimport { Redirect } from 'react-router-dom'\n\nimport { getAllPendingCases } from '../../../redux/case/case.actions';\nimport AdminCaseListViewer from './admin-case-list/AdminCaseListViewer';\n\nclass CaseAnalysisAdminConsole extends React.Component {\n    componentDidMount() {\n        if (this.props.userInfo && this.props.userInfo.role === 'admin') {\n            this.props.getAllPendingCases(this.props.userInfo._id);\n        }\n    }\n\n    renderRedirect() {\n        if (this.props.userInfo && this.props.userInfo.role !== 'admin') {\n            return <Redirect to='/' />\n        }\n    }\n\n  render() {\n    this.renderRedirect()\n    return (\n      <div className=\"case-analysis-div\">\n        <h3 className=\"darkslategrey\">Welcome to Admin console</h3>\n        <AdminCaseListViewer caseList={this.props.casePendingList}/>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    userInfo: state.user.userInfo,\n    casePendingList: state.caseAnalysisConsole.admin.casePendingList,\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getAllPendingCases: (uid) => dispatch(getAllPendingCases(uid))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CaseAnalysisAdminConsole);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport './Dashboard.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport CaseAnalysisContainer from '../components/case-analysis/CaseAnalysisContainer';\nimport CaseAnalysisWizard from '../components/case-analysis/wizard/CaseAnalysisWizard';\nimport CaseAnalysisAdminConsole from '../components/case-analysis/admin/CaseAnalysisAdminConsole';\n\nimport { logoutUser } from '../redux/user/user.actions';\n\nclass Dashboard extends React.Component {\n\n    render() {\n    \n      return (\n        <Router>\n          <div>\n            <div className=\"container-fluid\">\n              <div className=\"row\">\n                  <div className=\"col-2 bg-dark position-fixed\" id=\"sticky-sidebar\">\n                      <div className=\"nav flex-column flex-nowrap vh-100 overflow-auto text-white p-2\">\n                      <ul className=\"navbar-nav list-inline mx-auto justify-content-center\">\n                        <li className=\"nav-item active\">\n                          <img src=\"https://res.cloudinary.com/karanthakor/image/upload/c_scale,w_73/v1606984283/icon_s318jf.png\" alt=\"Avatar\" className=\"image\"/>\n                        </li>\n                        <li className=\"nav-item active\">\n                          <i className=\"fa fa-user user-icon\"></i> {this.props.userInfo?.name}\n                        </li>\n                        <li className=\"nav-item active\">\n                          <Link to=\"/\" className=\"nav-link list-inline-item \">Dashboard</Link>\n                        </li>\n                        <li className=\"nav-item\">\n                          <Link to=\"/case-wizard\" className=\"nav-link list-inline-item\">Case Wizard</Link>\n                        </li>\n                        {\n                          (this.props.userInfo?.role === \"admin\") && <li className=\"nav-item\">\n                              <Link to=\"/admin\" className=\"nav-link list-inline-item\">Admin Console</Link>\n                            </li>\n                        }\n                        <li className=\"nav-item active\">\n                          <p onClick={this.props.logoutUser} className=\"nav-link list-inline-item logout-btn\">Logout</p>\n                        </li>\n                        </ul>\n                      </div>\n                  </div>\n                  <div className=\"col-10 offset-2\" id=\"main\">\n                      <Switch>\n                        <Route exact path=\"/\" component={CaseAnalysisContainer} />\n                        <Route exact path=\"/case-wizard\" component={CaseAnalysisWizard} />\n                        {\n                          (this.props.userInfo?.role === \"admin\") && <Route exact path=\"/admin\" component={CaseAnalysisAdminConsole} />\n                        }\n                      </Switch>\n                  </div>\n              </div>\n            </div>\n          </div>\n        </Router>\n      );\n    }\n}\n\nconst mapStateToProps = state => {\n  return {\n    userInfo: state.user.userInfo,\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    logoutUser: () => dispatch(logoutUser())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport Login from \"./pages/Login\";\nimport Dashboard from \"./pages/Dashboard\";\n\n// home router outlet\nconst AppRouter = () => (\n  <Switch>\n    <Route exact path='/login' component={Login} />\n    <Route path='/' component={Dashboard} />\n  </Switch>\n);\n\nexport default AppRouter;","import React from \"react\";\nimport './App.css';\n\nimport {\n  BrowserRouter as Router\n} from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from 'react-router-dom';\n\nimport AppRouter from \"./router\";\nimport { isUserLoggedIn } from './redux/user/user.actions';\n\nclass App extends React.Component {\n\n  isUserAuthIn() {\n    // check auth on re-render\n    if (!this.props.userInfo) {\n      return <Redirect to='/login' />\n    }\n  }\n\n  componentDidMount() {\n    if (!this.props.userInfo) {\n      // check for state on hard referesh\n      this.props.isUserLoggedIn();\n    }\n  }\n\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          {this.isUserAuthIn()}\n          <AppRouter />\n        </div>\n      </Router>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    userInfo: state.user.userInfo,\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    isUserLoggedIn: () => dispatch(isUserLoggedIn())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { AUTHENTICATE, LOGOUT, INIT_LOGIN_CHECK, INVALID_LOGIN } from './user.types';\n\nconst INITIAL_STATE = {\n    userInfo: null,\n    inValidUserMessage: ''\n};\n\nconst reducer = (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case INIT_LOGIN_CHECK:\n            let obj = null;\n            if (localStorage.getItem('vistapath_user')) obj = JSON.parse(localStorage.getItem('vistapath_user'));\n            return {\n                ...state,\n                userInfo: obj\n            }\n\n        case AUTHENTICATE: {\n            localStorage.setItem('vistapath_user', JSON.stringify(action.payload));\n            return {\n                ...state,\n                userInfo: action.payload\n           };\n        }\n        case INVALID_LOGIN: {\n            return {\n                ...state,\n                inValidUserMessage: action.payload\n           };\n        }\n        case LOGOUT:\n        localStorage.removeItem('vistapath_user');\n           return {\n            ...state,\n            userInfo: null\n           };\n         default: return state;\n    }\n};\n\nexport default reducer;\n","import { SET_ALL_CASES } from './case.types';\n\nconst INITIAL_STATE = {\n    caseList: []\n};\n\nconst reducer = (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case SET_ALL_CASES: {\n            return {\n                ...state,\n                caseList: action.payload\n           };\n        }\n        default: return state;\n    }\n};\n\nexport default reducer;\n","import { \n    NEW_CASE_CREATED,\n    CASE_EDIT_INITIATED,\n    CASE_EDIT_DISCARDED,\n    CLEAR_CASE_UPDATE_NOTIFICATION\n} from './case.types';\n\nconst INITIAL_STATE = {\n    caseEditInProgressId: '',\n    caseCreatedNotification: '',\n    status: ''\n};\n\nconst reducer = (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case NEW_CASE_CREATED: {\n            return {\n                ...state,\n                status: action.payload\n           };\n        }\n        case CASE_EDIT_INITIATED: {\n            return {\n                ...state,\n                caseEditInProgressId: action.payload\n           };\n        }\n        case CASE_EDIT_DISCARDED: {\n            return {\n                ...state,\n                caseEditInProgressId: ''\n           };\n        }\n        case CLEAR_CASE_UPDATE_NOTIFICATION: {\n            return {\n                ...state,\n                status: action.payload\n           };\n        }\n        default: return state;\n    }\n};\n\nexport default reducer;\n","import { SET_ALL_PENDING_CASES } from './case.types';\n\nconst INITIAL_STATE = {\n    casePendingList: []\n};\n\nconst reducer = (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case SET_ALL_PENDING_CASES: {\n            return {\n                ...state,\n                casePendingList: action.payload\n           };\n        }\n        default: return state;\n    }\n};\n\nexport default reducer;\n","import { combineReducers } from 'redux';\nimport caseListViewReducer from './case-list-view-reducer';\nimport caseWizardReducer from './case-wizard-reducer';\nimport caseAdminReducer from './case-admin-reducer';\n\nconst caseReducer = combineReducers({\n    caseWizard: caseWizardReducer,\n    caseListView: caseListViewReducer,\n    admin: caseAdminReducer\n});\n\nexport default caseReducer;","import { combineReducers } from 'redux';\nimport userReducer from './user/user.reducer';\nimport caseReducer from './case/case.reducer';\n\nconst rootReducer = combineReducers({\n    user: userReducer,\n    caseAnalysisConsole: caseReducer\n});\n\nexport default rootReducer;","import { createStore, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer from './rootReducer';\n// thunk and redux dev tools\nconst enhancers = [applyMiddleware(thunk), composeWithDevTools()];\n\nconst store = createStore(\n    rootReducer,\n    compose(...enhancers)\n);\n\nexport default store;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n // REDUX\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\n// third party styling\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}